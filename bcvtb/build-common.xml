<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="bcvtb-settings"> 
  <property name="VERSION"  value="0.3.1"/>

  <!-- Version information -->
  <filterset id="build.filters">
    <filter token="VERSION" value="${VERSION}"/>
    <filter token="DATE" value="${TODAY}"/>
    <filter token="TIME" value="${TSTAMP}"/>
  </filterset>

  <!-- Get environment variables and user properties -->
  <property environment="env"/>
  <property file="${env.BCVTB_HOME}${file.separator}user.properties"/>
  <property file="${env.BCVTB_HOME}${file.separator}build.properties"/>
  <!-- 
       Set properties that depend on tools that a user has installed.
       Note that conditions need to be set. Reading just the property
       file is not sufficent for a conditional execution of the targets
   -->  
  <condition property="have.EnergyPlusMatlab" value="true">
    <and>
      <equals arg1="${haveEnergyPlus}" arg2="true" trim="true"/>
      <equals arg1="${haveMatlab}"     arg2="true" trim="true"/>
    </and>
   </condition>
  <condition property="have.EnergyPlus" value="true">
      <equals arg1="${haveEnergyPlus}"  arg2="true" trim="true"/>
   </condition>
  <condition property="have.matlab" value="true">
      <equals arg1="${haveMatlab}"  arg2="true" trim="true"/>
   </condition>
  <condition property="have.dymola" value="true">
      <equals arg1="${haveDymola}"  arg2="true" trim="true"/>
   </condition>
  <condition property="have.ifort" value="true">
      <equals arg1="${haveIfort}"  arg2="true" trim="true"/>
   </condition>
  <condition property="have.doxygen" value="true">
      <equals arg1="${haveDoxygen}"  arg2="true" trim="true"/>
   </condition>

  <!-- Set conditions that are used by different build files -->
  <condition property="mac" value="true">
    <os name="Mac OS X"/>
  </condition>
  <condition property="linux" value="true">
    <os name="Linux"/>
  </condition>
  <condition property="windows" value="true">
    <os family="windows"/>
  </condition>

  <!-- Set OS specific compiler and linker flags
       In Mac OS X 10.6, the cc compiler generates by default
       64-bit binaries. These binaries are incompatible with the 
       EnergyPlus binary which is 32-bit and with the Matlab scripts. 
       Hence, we generate the BCVTB in 32-bit. -->
  <condition property="cc.compile" value="-m32">
    <os name="Mac OS X"/>
  </condition>
  <condition property="cc.compile" value="-m32">
    <os name="Linux"/>
  </condition>
  <condition property="cc.compile" value="">
    <os family="windows"/>
  </condition>
  <property name="cc.link"       value="${cc.compile}"/>
  <property name="ifort.compile" value="${cc.compile}"/>
  <property name="ifort.link"    value="${ifort.compile}"/>

  <!-- Set path to 3rd party libraries -->
  <condition property="path.expat" 
             value="${env.BCVTB_HOME}\lib-windows\expat-2.0.1">
    <os family="windows"/>   <!-- only needed on Windows -->
  </condition>

  <!-- Files for unit tests -->
  <property name="BCVTB_BINDIR" value="${env.BCVTB_HOME}${file.separator}bin"/>
  <condition property="ptUnitTestExecutable" 
	     value="${BCVTB_BINDIR}${file.separator}bcvtb" 
	     else ="${BCVTB_BINDIR}${file.separator}bcvtb.bat">
    <os family="unix"/>
  </condition>
  <condition property="ptUnitTestFile" value="system.xml" else="system-windows.xml">
    <os family="unix"/>
  </condition>

  <tstamp>
    <format property="year" pattern="yyyy"/>
  </tstamp>

  <!-- Set c compiler and object file extension -->
  <condition property="cc" value="msvc">
    <os family="windows"/>
  </condition>
  <condition property="cc" value="gcc">
    <os family="unix"/>
  </condition>
  <condition property="extObj" value="obj">
    <os family="windows"/>
  </condition>
  <condition property="extObj" value="o">
    <os family="unix"/>
  </condition>

 
  <!-- Make sure JAVA_HOME is set as ant requires it
    <available property="foundJavaHome" file="${env.JAVA_HOME}" type="dir"/>
    <fail message="Environment variable JAVA_HOME is not set." unless="foundJavaHome"/>
 -->
    <!-- Set path the lib/cpptasks.jar
    <taskdef resource="cpptasks.tasks">
      <classpath>
        <pathelement location="/home/mwetter/proj/bcvtb/task1-supVis/code/bcvtb/trunk/bcvtb/lib/cpptasks.jar"/>
      </classpath>
    </taskdef>
 -->
<condition property="classPathLBNLActorsSet" value="true">
  <contains string="${java.class.path}" substring="${env.BCVTB_HOME}"
	    casesensitive="true" />
</condition>
  <fail unless="classPathLBNLActorsSet"
	message="CLASSPATH does not seem to be set to lib directory of the BCVTB. Did you run 'source bin/setenv.sh' on Linux or Mac or 'bin/setenv.bat' on Windows?"/>

  <!-- Diagnostics information -->
  <target name="diagnostics" description="Outputs diagnostics information">
    <echo message="os.name = ${os.name}"/>
    <echo message="Compiler = ${cc}"/>
    <echo message="ptUnitTestExecutable = ${ptUnitTestExecutable}"/>
    <echo message="ptUnitTestFile = ${ptUnitTestFile}"/>
    <echo message="Classpath for actors set = ${classPathLBNLActorsSet}"/>
    <echo message="BCVTB_HOME = ${env.BCVTB_HOME}"/>
    <echoproperties>
      <propertyset>
        <propertyref prefix="env.BCVTB"/>
        <propertyref prefix="have."/>
        <propertyref prefix="path."/>
        <propertyref prefix="ptUnitTest."/>
      </propertyset>
    </echoproperties>
    <echo message="cc.compile    = ${cc.compile}"/>
    <echo message="cc.link       = ${cc.link}"/>
    <echo message="ifort.compile = ${ifort.compile}"/>
    <echo message="ifort.link    = ${ifort.link}"/>
   </target>

</project>
